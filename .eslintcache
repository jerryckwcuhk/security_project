[{"/Users/jerrycheungkw/Desktop/Jerry CKW/CUHK Master/CMSC 5726 Security/project/frontend/src/index.js":"1","/Users/jerrycheungkw/Desktop/Jerry CKW/CUHK Master/CMSC 5726 Security/project/frontend/src/App.js":"2","/Users/jerrycheungkw/Desktop/Jerry CKW/CUHK Master/CMSC 5726 Security/project/frontend/src/config.js":"3","/Users/jerrycheungkw/Desktop/Jerry CKW/CUHK Master/CMSC 5726 Security/project/frontend/src/attack.js":"4","/Users/jerrycheungkw/Desktop/Jerry CKW/CUHK Master/CMSC 5726 Security/project/frontend/src/narrowMI.js":"5","/Users/jerrycheungkw/Desktop/Jerry CKW/CUHK Master/CMSC 5726 Security/project/frontend/src/searchSI.js":"6","/Users/jerrycheungkw/Desktop/Jerry CKW/CUHK Master/CMSC 5726 Security/project/frontend/src/utils.js":"7","/Users/jerrycheungkw/Desktop/Jerry CKW/CUHK Master/CMSC 5726 Security/project/frontend/src/server.js":"8"},{"size":219,"mtime":1651294629347,"results":"9","hashOfConfig":"10"},{"size":1100,"mtime":1651306727067,"results":"11","hashOfConfig":"10"},{"size":259,"mtime":1651306596967,"results":"12","hashOfConfig":"10"},{"size":1074,"mtime":1651307030783,"results":"13","hashOfConfig":"10"},{"size":3152,"mtime":1651306843473,"results":"14","hashOfConfig":"10"},{"size":2784,"mtime":1651306849833,"results":"15","hashOfConfig":"10"},{"size":448,"mtime":1651306598862,"results":"16","hashOfConfig":"10"},{"size":1296,"mtime":1651306595112,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"19a4x6q",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"/Users/jerrycheungkw/Desktop/Jerry CKW/CUHK Master/CMSC 5726 Security/project/frontend/src/index.js",[],["39","40"],"/Users/jerrycheungkw/Desktop/Jerry CKW/CUHK Master/CMSC 5726 Security/project/frontend/src/App.js",["41","42","43"],"import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport config from './config'\nimport { attack } from './attack'\n\nfunction App() {\n  const [lowerBoundLeft, setLowerBound] = useState(100);\n  const [upperBoundLeft, setUpperBound] = useState(100);\n  \n  // useEffect(changeRandomly)\n  const originalBoundLeft = ((2 * config.B) / (config.max)) * 100\n  const width = (config.B / config.max) * 100\n\n  attack()\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-body\">\n        <div className='time-line'>\n          <div className=\"original-bound\" style={{left: `${originalBoundLeft}%`, width: `${width}%` }}></div>\n          <div className=\"lower-bound\" style={{left: lowerBoundLeft}}></div>\n          <div className=\"upper-bound\" style={{left: upperBoundLeft}}></div>\n        </div>\n        \n      </div>\n    </div>\n  );\n\n  function changeRandomly() {\n    const id = setInterval(() => {\n      const randomVal = Math.floor(Math.random() * 100);\n      setLowerBound(lowerBoundLeft => randomVal)\n    }, 3000)\n    return () => clearInterval(id);\n  }\n}\n\n\n\nexport default App;\n","/Users/jerrycheungkw/Desktop/Jerry CKW/CUHK Master/CMSC 5726 Security/project/frontend/src/config.js",[],"/Users/jerrycheungkw/Desktop/Jerry CKW/CUHK Master/CMSC 5726 Security/project/frontend/src/attack.js",["44"],"import BigNumber from 'bignumber.js';\nimport config from './config'\nimport { searchSI } from './searchSI'\n\nimport { narrowMI } from './narrowMI'\n\nimport { Logger } from './utils'\n\nconst { publicKey, n, m0 } = config\n\nconst logger = new Logger('attack.js')\n\n\n\nfunction fakeInteceptCipher(message) {\n    const binary = message.toString(2).padStart(4, '0')\n    const transformedMessage = parseInt(`001011110000${binary}`, 2) // 12036\n    const cipher = new BigNumber(transformedMessage).exponentiatedBy(publicKey, n).toNumber()\n    logger.log(`intercepted cipher: ${cipher}`)\n    return cipher\n}\n\nfunction attack() {\n    const interceptedCipher = fakeInteceptCipher(m0) // 45190\n    let i = 1\n    let interval = []\n    for (let i = 1; i <= 10; i++) {\n        if (i === 1 || interval.length > 1 || interval[0][0] !==  interval[0][1]) {\n            const matchedSI = searchSI(i, interceptedCipher)\n            interval = narrowMI(i, matchedSI)\n        } else {\n            console.log(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            break;\n        }\n    }\n}\n\nexport { attack }\n","/Users/jerrycheungkw/Desktop/Jerry CKW/CUHK Master/CMSC 5726 Security/project/frontend/src/narrowMI.js",[],"/Users/jerrycheungkw/Desktop/Jerry CKW/CUHK Master/CMSC 5726 Security/project/frontend/src/searchSI.js",["45"],"import BigNumber from 'bignumber.js';\nimport { call } from './server'\n\nimport { Logger } from './utils'\nimport { narrowMI, M } from './narrowMI'\nimport config from './config'\n\nconst { publicKey, n, B } = config\n\nconst logger = new Logger('searchSI.js')\n\nconst s1 = new BigNumber(n).dividedBy(3 * B).integerValue(BigNumber.ROUND_CEIL).toNumber()\nconst S = [1]\n\nfunction searchSI(i, cipher) {\n    // let currentSi = S[i]\n    if (i === 1) {\n        const matechedSI = searchFirstSI(cipher)\n        S.push(matechedSI)\n        return matechedSI\n    }\n    if (M[i - 1].length > 1) {\n        const matechedSI = searchSIWithMultipleIntervals(i, cipher)\n        S.push(matechedSI)\n        return matechedSI\n    }\n\n    if (M[i - 1].length === 1) {\n        const matchedSI = searchWithSingleInterval(i, cipher)\n        S.push(matchedSI)\n        return matchedSI\n    }\n\n    \n}\n\nfunction searchFirstSI(cipher) {\n    let checkingSI = s1\n    let isValid = false\n    while(isValid === false) {\n        isValid = checkWithServer(checkingSI, cipher)\n        checkingSI += 1\n    }\n    const matchedSI = checkingSI - 1\n    logger.log(`found matched S1: ${matchedSI}`)\n    return matchedSI\n}\n\nfunction searchSIWithMultipleIntervals(i, cipher) {\n    let checkingSI = S[i - 1] + 1\n    let isValid = false\n    while(isValid === false) {\n        isValid = checkWithServer(checkingSI, cipher)\n        checkingSI += 1\n    }\n    const matchedSI = checkingSI - 1\n    logger.log(`found matched S${i}: ${matchedSI}`)\n    return matchedSI\n\n}\n\nfunction searchWithSingleInterval(i, cipher) {\n    const [a, b] = M[i - 1][0]\n    let r = new BigNumber(b)\n                        .multipliedBy(S[i - 1])\n                        .minus(2 * B)\n                        .multipliedBy(2)\n                        .dividedBy(n)\n                        .integerValue(BigNumber.ROUND_CEIL)\n                        .toNumber()\n    \n    let isValid = false\n    let matchedSI = null\n    while(isValid === false) {\n        const startS = new BigNumber(2 * B).plus(r * n).dividedBy(b).integerValue(BigNumber.ROUND_CEIL).toNumber()\n        const endS = new BigNumber(3 * B).minus(1).plus(r * n).dividedBy(a).integerValue(BigNumber.ROUND_FLOOR).toNumber()\n        for (let s = startS; s <= endS; s++) {\n            isValid = checkWithServer(s, cipher)\n            if (isValid) {\n                matchedSI = s\n                break;\n            }\n        }\n        r += 1\n        \n    }\n    logger.log(`found matched S${i}: ${matchedSI}`)\n    return matchedSI\n}\n\nfunction checkWithServer(SI, cipher) {\n    const siPowerE = new BigNumber(SI).exponentiatedBy(publicKey)\n    const modifierCipher = BigNumber(cipher).multipliedBy(siPowerE).modulo(n).toNumber()\n    const isValid = call(modifierCipher)\n    return isValid\n}\n\nexport { searchSI }","/Users/jerrycheungkw/Desktop/Jerry CKW/CUHK Master/CMSC 5726 Security/project/frontend/src/utils.js",[],"/Users/jerrycheungkw/Desktop/Jerry CKW/CUHK Master/CMSC 5726 Security/project/frontend/src/server.js",["46","47","48"],"const bigNumber = require('bignumber.js');\nconst { Logger } = require('./utils')\nconst { config } = require('./config')\nconst { privateKey, n } = config\n\nfunction call(cipher) {\n    const isSuccess = decrypt(cipher)\n    return isSuccess\n}\n\nconst logger = new Logger('server.js')\n\n\nfunction decrypt(cipher) {\n    const message = (new bigNumber(cipher).exponentiatedBy(privateKey, n))\n    const encryptionBlock = message.toNumber()\n    if(isConform(encryptionBlock)) {\n        const blockLength = 4\n        const binary = encryptionBlock.toString(2)\n        const data = parseInt(binary.substr(-blockLength), 2)\n        logger.hiddenLog(`decrypted message: ${data}`)\n        return true\n    }\n    return false\n}\n\nfunction isConform(encryptionBlock) {\n    const headerIndex = 0\n    const paddingIndex = 4\n    const tailIndex = 8\n    \n    const blockLength = 4\n    let binary = encryptionBlock.toString(2).padStart(16, '0')\n    const binaryLen = binary.length\n    \n    const header = binary.substr(headerIndex, blockLength)\n    const padding = binary.substr(paddingIndex, blockLength)\n    const tail = binary.substr(tailIndex, blockLength)\n\n    if (header !== '0010') { // || padding !== '1111' // || tail !== '0000'\n        // logger.log('Invalid Format')\n        return false\n    }\n    return true\n}\n\nexports.call = call",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":27,"nodeType":"55","messageId":"56","endLine":2,"endColumn":36},{"ruleId":"53","severity":1,"message":"57","line":8,"column":26,"nodeType":"55","messageId":"56","endLine":8,"endColumn":39},{"ruleId":"53","severity":1,"message":"58","line":29,"column":12,"nodeType":"55","messageId":"56","endLine":29,"endColumn":26},{"ruleId":"53","severity":1,"message":"59","line":25,"column":9,"nodeType":"55","messageId":"56","endLine":25,"endColumn":10},{"ruleId":"53","severity":1,"message":"60","line":5,"column":10,"nodeType":"55","messageId":"56","endLine":5,"endColumn":18},{"ruleId":"53","severity":1,"message":"61","line":34,"column":11,"nodeType":"55","messageId":"56","endLine":34,"endColumn":20},{"ruleId":"53","severity":1,"message":"62","line":37,"column":11,"nodeType":"55","messageId":"56","endLine":37,"endColumn":18},{"ruleId":"53","severity":1,"message":"63","line":38,"column":11,"nodeType":"55","messageId":"56","endLine":38,"endColumn":15},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setUpperBound' is assigned a value but never used.","'changeRandomly' is defined but never used.","'i' is assigned a value but never used.","'narrowMI' is defined but never used.","'binaryLen' is assigned a value but never used.","'padding' is assigned a value but never used.","'tail' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]